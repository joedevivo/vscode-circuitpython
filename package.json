{
  "name": "vscode-circuitpython",
  "displayName": "CircuitPython",
  "description": "CircuitPython for Visual Studio Code",
  "version": "0.1.18",
  "publisher": "joedevivo",
  "license": "MIT",
  "qna": "https://github.com/joedevivo/vscode-circuitpython/discussions",
  "repository": {
    "type": "git",
    "url": "https://github.com/joedevivo/vscode-circuitpython.git"
  },
  "bugs": {
    "url": "https://github.com/joedevivo/vscode-circuitpython/issues"
  },
  "engines": {
    "vscode": "^1.66.0"
  },
  "icon": "images/BlinkaOnDark.png",
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "iot",
    "adafruit",
    "circuitpython",
    "blinka",
    "python"
  ],
  "activationEvents": [
    "workspaceContains:/code.py",
    "workspaceContains:/code.txt",
    "workspaceContains:/main.py",
    "workspaceContains:/main.txt",
    "workspaceContains:/boot_out.txt",
    "onCommand:circuitpython.openSerialMonitor",
    "onCommand:circuitpython.selectSerialPort",
    "onCommand:circuitpython.closeSerialMonitor"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "circuitpython.selectSerialPort",
        "title": "CircuitPython: Select Serial Port"
      },
      {
        "command": "circuitpython.openSerialMonitor",
        "title": "CircuitPython: Open Serial Monitor"
      },
      {
        "command": "circuitpython.closeSerialMonitor",
        "title": "CircuitPython: Close Serial Monitor"
      },
      {
        "command": "circuitpython.sendMessageToSerialPort",
        "title": "CircuitPython: Send Text to Serial Port"
      },
      {
        "command": "circuitpython.selectBoard",
        "title": "CircuitPython: Choose CircuitPython Board"
      },
      {
        "command": "circuitpython.library.show",
        "title": "CircuitPython: Show Available Libraries"
      },
      {
        "command": "circuitpython.library.list",
        "title": "CircuitPython: List Project Libraries"
      },
      {
        "command": "circuitpython.library.reload",
        "title": "CircuitPython: Reload Project Libraries"
      },
      {
        "command": "circuitpython.library.update",
        "title": "CircuitPython: Update All Libraries"
      },
      {
        "command": "circuitpython.library.fetch",
        "title": "CircuitPython: Check for latest bundle"
      }
    ],
    "configuration": {
      "title": "Circuit Python",
      "properties": {
        "circuitpython.board.vid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Vendor ID for the current board. Intended to be set at the workspace level.",
          "scope": "window"
        },
        "circuitpython.board.pid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Product ID for the current board. Intended to be set at the workspace level.",
          "scope": "window"
        },
        "circuitpython.board.version": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Circuit Python version for the current board. Intended to be set at the workspace level.",
          "scope": "window"
        }
      }
    },
    "keybindings": [
      {
        "command": "circuitpython.openSerialMonitor",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "test-compile": "tsc -p ./",
    "deploy": "vsce publish",
    "compile": "tsc -b ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && yarn npm lint",
    "test": "node ./out/test/runTest.js",
    "electron-rebuild": "electron-rebuild -v 17.2.0",
    "build-bindings": "node ./scripts/build-bindings.js",
    "install-bindings": "node ./scripts/install-bindings.js"
  },
  "extensionDependencies": [
    "ms-python.python"
  ],
  "devDependencies": {
    "@mapbox/node-pre-gyp": "^1.0.5",
    "@types/drivelist": "^6.4.2",
    "@types/glob": "^7.1.4",
    "@types/lodash": "^4.14.172",
    "@types/mocha": "^7.0.2",
    "@types/node": "16.x",
    "@types/serialport": "^8.0.2",
    "@types/vscode": "^1.66.0",
    "@typescript-eslint/eslint-plugin": "^5.16.0",
    "@typescript-eslint/parser": "^5.16.0",
    "@vscode/test-electron": "^2.1.3",
    "ansi-regex": "^6.0.1",
    "electron": "17.2.0",
    "electron-builder": "^22.14.13",
    "electron-rebuild": "^3.2.7",
    "eslint": "^8.11.0",
    "glob": "^7.2.0",
    "minimist": "^1.2.6",
    "mocha": "^7.2.0",
    "node-abi": "^2.30.0",
    "node-gyp": "^9.0.0",
    "node-loader": "^2.0.0",
    "prebuild": "^11.0.3",
    "tar": "^6.1.11",
    "ts-loader": "^9.2.8",
    "typed-rest-client": "^1.8.0",
    "typescript": "^4.5.5",
    "typescript-http-client": "^0.10.1",
    "vsce": "^2.7.0"
  },
  "dependencies": {
    "axios": "^0.26.1",
    "drivelist": "^9.2.4",
    "fs-extra": "^8.1.0",
    "globby": "^11.0.4",
    "lodash": "^4.17.20",
    "semver": "^7.3.5",
    "serialport": "^10.4.0",
    "shelljs": "^0.8.5",
    "trash": "^6.1.1",
    "typescript-string-operations": "^1.4.1",
    "unzipper": "^0.10.11"
  }
}
